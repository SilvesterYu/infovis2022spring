{"version":3,"sources":["MapChart.js","index.js"],"names":["colorScale","scaleQuantize","domain","range","rounded","num","Math","round","MapChart","_ref","setTooltipContent","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","csv","then","counties","react_default","a","createElement","Fragment","index_umd","data-tip","projection","geography","_ref2","geographies","map","geo","cur","find","s","id","key","rsmKey","fill","bias","onMouseEnter","name","totalvotes","democrats","republicans","concat","handleMouseEnter","onMouseLeave","style","hover","outline","App","content","setContent","className","src_MapChart","index_es","textColor","backgroundColor","display","alignItems","marginLeft","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7bca84e7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantize } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nconst colorScale = scaleQuantize()\n  .domain([-1, 1])\n  .range([\n    '#fd2e0f', '#ff4e69', '#ff7cad', '#ffa9de', '#f5d0f8', '#e7d2f6', '#dbd3f1', '#d3d3e9', '#b1b6dc', '#8c9cd0', '#5f82c4', '#0e6bb8'\n  ]);\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst bias_display = (bias) => {\n  if (bias > 0) {\n    return `Democrats ${bias}`;\n  }\n  else {\n    return `Republicans ${-bias}`;\n  }\n}\n  \nconst MapChart = ({setTooltipContent}) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // https://www.bls.gov/lau/\n    csv(\"/infovis2022spring/team18/2020.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n\n  const handleMouseEnter = (geo) => {\n    const cur = data.find(s => s.id === geo.id);\n    setTooltipContent({\n      name: cur.name,\n      totalvotes: rounded(cur.totalvotes),\n      democrats: rounded(cur.democrats),\n      republicans: rounded(-cur.republicans),\n      bias: bias_display(Math.round(cur.bias * 100) / 100)\n    });\n  }\n  \n  return (\n    <>\n      <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => {\n              const cur = data.find(s => s.id === geo.id);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={colorScale(cur ? cur.bias : \"#EEE\")}\n                  onMouseEnter={() => handleMouseEnter(geo)}\n                  onMouseLeave={() => {setTooltipContent(null)}}\n                  style={{\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </>\n  );\n};\n\nexport default MapChart;\n","import React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"./styles.css\";\n\nimport MapChart from \"./MapChart\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  \n  return (\n    <div>\n      <h2 className=\"title\">\n          2020 US Presidential Election Bias Map\n      </h2>\n      <p>\n        <span>Bias = | Democrats' Votes ➖ Republicans' Votes | ➗ All Votes </span>\n      </p>\n      <MapChart setTooltipContent={setContent}/>\n      <ReactTooltip className=\"tooltip\" textColor=\"#000\" backgroundColor=\"#FFF\">\n        {content  && (\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div style={{ marginLeft: 7 }}>\n              <p className=\"state\">{content.name}</p>\n              <p className=\"elect-total\">\n               Totalvotes: {content.totalvotes} \n              </p>\n              <p className=\"eevp\">\n                Democrats: {content.democrats}\n              </p>\n              <p className=\"eevp\">\n                Republicans: {content.republicans}\n              </p>\n              <p className=\"winner-name\">\n                Bias: {content.bias}\n              </p>\n            </div>\n        </div>\n        )}\n      </ReactTooltip>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}